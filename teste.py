import numpy as np
import torch

from sympy import symbols, diff, Matrix

adp, asa, asp, aspp, atp, hs, hsp, nadp, nadph, phos, thr, compartment = symbols('adp asa asp aspp atp hs hsp nadp nadph phos thr compartment')

x= [0.0953582315454683*atp*compartment*hs/((hs + 0.11*(0.229885057471264*atp + 1.0)*(0.91743119266055*thr + 1.0))*(atp + 0.0153191489361702*hs + 0.072)) + compartment*(0.150000207651375*(-1562.5*adp*aspp + asp*atp)/((3.92*adp + atp + 0.98)*(asp + 57.0588235294118*aspp + 0.97*(1510.39184818352*thr**4.09 + 1.0)/(37.4075352775276*thr**4.09 + 1.0))) + 0.0280251551219983*(-1562.5*adp*aspp + asp*atp)/((0.88*adp + atp + 0.22)*(asp + 18.8235294117647*aspp + 0.32))) + 0.00828246493415114*compartment, -1.00100020017091*compartment*(3.89545649683303*thr**1.41 + 1.0)*(asa*nadph - 0.000316227766016838*hs*nadp)/((26.8319264427001*thr**1.41 + 1.0)*(asa + 0.0707964601769911*hs + 0.24)*(0.552238805970149*nadp + nadph + 0.037)) + 0.181199844561542*compartment*(-0.0177257716377151*asa*nadp*phos + aspp*nadph)/((aspp + 0.022*(9.09090909090909*asa + 1.0)*(0.1*phos + 1.0))*(0.201388888888889*nadp + nadph + 0.029)), -compartment*(0.150000207651375*(-1562.5*adp*aspp + asp*atp)/((3.92*adp + atp + 0.98)*(asp + 57.0588235294118*aspp + 0.97*(1510.39184818352*thr**4.09 + 1.0)/(37.4075352775276*thr**4.09 + 1.0))) + 0.0280251551219983*(-1562.5*adp*aspp + asp*atp)/((0.88*adp + atp + 0.22)*(asp + 18.8235294117647*aspp + 0.32))), compartment*(0.150000207651375*(-1562.5*adp*aspp + asp*atp)/((3.92*adp + atp + 0.98)*(asp + 57.0588235294118*aspp + 0.97*(1510.39184818352*thr**4.09 + 1.0)/(37.4075352775276*thr**4.09 + 1.0))) + 0.0280251551219983*(-1562.5*adp*aspp + asp*atp)/((0.88*adp + atp + 0.22)*(asp + 18.8235294117647*aspp + 0.32))) - 0.181199844561542*compartment*(-0.0177257716377151*asa*nadp*phos + aspp*nadph)/((aspp + 0.022*(9.09090909090909*asa + 1.0)*(0.1*phos + 1.0))*(0.201388888888889*nadp + nadph + 0.029)), -0.0953582315454683*atp*compartment*hs/((hs + 0.11*(0.229885057471264*atp + 1.0)*(0.91743119266055*thr + 1.0))*(atp + 0.0153191489361702*hs + 0.072)) - compartment*(0.150000207651375*(-1562.5*adp*aspp + asp*atp)/((3.92*adp + atp + 0.98)*(asp + 57.0588235294118*aspp + 0.97*(1510.39184818352*thr**4.09 + 1.0)/(37.4075352775276*thr**4.09 + 1.0))) + 0.0280251551219983*(-1562.5*adp*aspp + asp*atp)/((0.88*adp + atp + 0.22)*(asp + 18.8235294117647*aspp + 0.32))) - 0.00828246493415114*compartment, -0.0953582315454683*atp*compartment*hs/((hs + 0.11*(0.229885057471264*atp + 1.0)*(0.91743119266055*thr + 1.0))*(atp + 0.0153191489361702*hs + 0.072)) + 1.00100020017091*compartment*(3.89545649683303*thr**1.41 + 1.0)*(asa*nadph - 0.000316227766016838*hs*nadp)/((26.8319264427001*thr**1.41 + 1.0)*(asa + 0.0707964601769911*hs + 0.24)*(0.552238805970149*nadp + nadph + 0.037)), 0.0953582315454683*atp*compartment*hs/((hs + 0.11*(0.229885057471264*atp + 1.0)*(0.91743119266055*thr + 1.0))*(atp + 0.0153191489361702*hs + 0.072)) - 0.0433999932532403*compartment*hsp/(hsp + 0.31), 0.0010915804881984*compartment*nadph + 1.00100020017091*compartment*(3.89545649683303*thr**1.41 + 1.0)*(asa*nadph - 0.000316227766016838*hs*nadp)/((26.8319264427001*thr**1.41 + 1.0)*(asa + 0.0707964601769911*hs + 0.24)*(0.552238805970149*nadp + nadph + 0.037)) + 0.181199844561542*compartment*(-0.0177257716377151*asa*nadp*phos + aspp*nadph)/((aspp + 0.022*(9.09090909090909*asa + 1.0)*(0.1*phos + 1.0))*(0.201388888888889*nadp + nadph + 0.029)), -0.0010915804881984*compartment*nadph - 1.00100020017091*compartment*(3.89545649683303*thr**1.41 + 1.0)*(asa*nadph - 0.000316227766016838*hs*nadp)/((26.8319264427001*thr**1.41 + 1.0)*(asa + 0.0707964601769911*hs + 0.24)*(0.552238805970149*nadp + nadph + 0.037)) - 0.181199844561542*compartment*(-0.0177257716377151*asa*nadp*phos + aspp*nadph)/((aspp + 0.022*(9.09090909090909*asa + 1.0)*(0.1*phos + 1.0))*(0.201388888888889*nadp + nadph + 0.029)), 0.0433999932532403*compartment*hsp/(hsp + 0.31) + 0.00828246493415114*compartment + 0.181199844561542*compartment*(-0.0177257716377151*asa*nadp*phos + aspp*nadph)/((aspp + 0.022*(9.09090909090909*asa + 1.0)*(0.1*phos + 1.0))*(0.201388888888889*nadp + nadph + 0.029)), 0.0433999932532403*compartment*hsp/(hsp + 0.31), 0]

y = [adp, asa, asp, aspp, atp, hs, hsp, nadp, nadph, phos, thr, compartment]

x = Matrix(x)

matrix = x.jacobian(y)

values = {'adp': 0.0, 'asa': 0.0, 'asp': 2.0, 'aspp': 0.0, 'atp': 5.0, 'hs': 7.89e-31, 'hsp': 0.0, 'nadp': 0.0, 'nadph': 2.0, 'phos': 0.0, 'thr': 2.0, 'compartment': 1.0}

matrix = [expr.subs(values) for expr in matrix]

matrix = np.array(matrix)
matrix = matrix.reshape(len(x), len(y))
matrix = matrix.astype(np.float64)
matrix = torch.from_numpy(matrix)

print(matrix)

[-0.00790137430730161, 0, 0.00449863417859195, -0.196230382755359, 0.000395068715365080, 0.140249695563530, 0, 0, 0, 0, 
-1.81451468418163e-5, 0.0375261189213759, 0, -0.642938075790631, 0, 8.11863634399131, 0, 0, 0, 8.02077167651049e-35, 0, 0, 0, 0, 
0.00790137430730161, 0, -0.00449863417859195, 0.196230382755359, -0.000395068715365080, 0, 0, 0, 0, 0, 1.81451468418163e-5,
 -0.0292436539872248, -0.00790137430730161, 0, 0.00449863417859195, -8.31486672674667, 0.000395068715365080, 0, 0, 0, 0, 0, 
 -1.81451468418163e-5, 0.0292436539872248, 0.00790137430730161, 0, -0.00449863417859195, 0.196230382755359, -0.000395068715365080, 
 -0.140249695563530, 0, 0, 0, 0, 1.81451468418163e-5, -0.0375261189213759, 0, 0.642938075790631, 0, 0, 1.15208061434968e-32, 
 -0.140249695563530, 0, -8.02077167651049e-35, 0, 0, 3.58113300322412e-32, -1.10657009799625e-31, 0, 0, 0, 0, -1.15208061434968e-32, 
 0.140249695563530, -0.139999978236259, 0, 0, 0, -3.58113300322412e-32, 1.10657009799625e-31, 0, 0.642938075790631, 0, 8.11863634399131, 
 0, 0, 0, -8.02077167651049e-35, 0.00109158048819840, 0, 0, 0.00218316097639680, 0, -0.642938075790631, 0, -8.11863634399131, 0, 0, 0, 
 8.02077167651049e-35, -0.00109158048819840, 0, 0, -0.00218316097639680, 0, 0, 0, 8.11863634399131, 0, 0, 0.139999978236259, 0, 0, 0, 0,
  0.00828246493415114, 0, 0, 0, 0, 0, 0, 0.139999978236259, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]